resources:
  repositories:
  - repository: Celestia
    type: github
    endpoint: GithubAuth
    name: levinli303/Celestia
  - repository: CelestiaCore
    type: github
    endpoint: GithubAuth
    name: levinli303/CelestiaCore

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- checkout: Celestia
- checkout: CelestiaCore
- checkout: self

- script: |
    cd Celestia
    git checkout origin/$(Build.SourceBranchName)
    git submodule update --init
    cd ../CelestiaCore
    git checkout origin/$(Build.SourceBranchName)
    git submodule update --init
  displayName: 'Checkout Branch'
  condition: ne( variables['Build.Reason'], 'PullRequest' )

- script: |
    cd Celestia
    git checkout origin/releases/1.3
    git submodule update --init
    cd ../CelestiaCore
    git checkout origin/releases/1.3
    git submodule update --init
  displayName: 'Checkout Branch (PR)'
  condition: eq( variables['Build.Reason'], 'PullRequest' )

- script: |
    cd CelestiaCore/libs/dependency
    git reset --hard 43735316698933c20d51406454af80b5ccced6c0
  displayName: 'Downgrade Thirdparty Dependencies'

- script: |
    cd CelestiaApp
    pod deintegrate
    pod install
  displayName: 'Reintegrate CocoaPods'

- script: |
    brew install gettext
  displayName: 'Install Gettext'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: '20210508.p12'
    certPwd: $(P12Password)
  displayName: 'Install Certificate'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provProfileSecureFile: 'CelestiaAppDistribution20210508.provisionprofile'
  displayName: 'Install Provision File'

- task: ios-bundle-version@1
  inputs:
    sourcePath: '$(system.defaultworkingdirectory)/CelestiaApp/CelestiaApp/Info.plist'
    versionCodeOption: 'buildid'
    versionCode: '$(Build.BuildId)'
    versionCodeOffset: '20'
    versionName: 
    printFile: true
  displayName: 'Update Bundle Version'

- task: Xcode@5
  inputs:
    actions: 'build'
    packageApp: true
    signingOption: manual
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
    scheme: 'CelestiaApp'
    sdk: 'macosx'
    configuration: 'Release'
    xcWorkspacePath: '$(system.defaultworkingdirectory)/CelestiaApp/CelestiaApp.xcworkspace'
    xcodeVersion: 'default'
    exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    archivePath: '$(system.defaultworkingdirectory)/archive'
  displayName: 'Build'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    contents: '**/*.pkg'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: 'Copy .pkg'

- task: CopyFiles@2
  inputs:
    sourceFolder: "$(system.defaultworkingdirectory)/archive"
    contents: '**/*.dSYM/**'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: 'Copy .dsym'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'macosx'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifacts'

- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'MacCelestiaAppCenter'
    appSlug: 'CelestiaProject/Celestia-2'
    appFile: '$(build.artifactstagingdirectory)/**/*.pkg'
    symbolsDsymFiles: '$(build.artifactstagingdirectory)/**/*.dSYM'
    releaseNotesOption: 'input'
    releaseNotesInput: 'Internal testing only.'
    destinationType: 'groups'
  displayName: 'Publish to App Center'